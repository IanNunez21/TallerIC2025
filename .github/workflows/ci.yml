name: CI Calculadora #Nombre del flujo de trabajo

#Esto especifica cuando se ejecutará el flujo de trabajo
on:
  push:                    #Se activa cuando se recibe un push al repositorio
    branches: [main]       #Especifica la rama a la que se aplicará el flujo de trabajo
  pull_request:            #Se activa cuando se crea un pull request
    branches: [main]       #Especifica la rama a la que se aplicará el flujo de trabajo

#Esto define que trabajos se ejecutarán en el flujo de trabajo
jobs:
  build:                 #Nombre del trabajo
    runs-on: ubuntu-latest        #Especifica el sistema operativo en el que se ejecutará el trabajo

    steps:                #Pasos a seguir en el trabajo
      - name: Checkout del repositorio
        uses: actions/checkout@v4  #Clona el repositorio en el entorno de ejecución

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ejecutar pruebas
        run: |
          export PYTHONPATH="${PWD}"
          python -m pytest 

  notify_slack:
    needs: build
    runs-on: ubuntu-latest
    if: always()           #se ejecuta tanto si la build pasa como si falla
    steps:
      - name: Notificar a Slack
        uses: rtCamp/action-slack-notify@v2
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}  #URL del webhook de Slack
          username: 'IC Bot'
          message: |
            *CI Calculadora* - Repo: `${{ github.repository }}`
            Rama: `${{ github.ref_name }}`
            Estado: *${{ needs.build.result }}*
          color: ${{ needs.build.result == 'success' && 'good' || 'danger' }}