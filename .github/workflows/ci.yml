name: CI Calculadora

on:
  push:
  pull_request:
    branches: [main]  # Especifica la rama a la que se aplicar√° el flujo de trabajo

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4  # Clona el repositorio en el entorno de ejecuci√≥n

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.6'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  

      - name: Ejecutar pruebas
        run: |
          export PYTHONPATH="${PWD}"
          python -m pytest 

  containerization:
    needs: build
    if: github.ref == 'refs/heads/main'  # Solo se ejecuta si el push o PR es a la rama 'main'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4  # Clona el repositorio en el entorno de ejecuci√≥n

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2  # Configura Docker Buildx

      - name: Loguearse en el registro de contenedores
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Construir la imagen Docker
        run: docker build -t calculadora-web:${{ github.sha }} .

      - name: Subir la imagen Docker a GitHub Container Registry
        run: docker push ghcr.io/iannunez21/calculadora-web-image:${{ github.sha }}


  deploy_render:
    needs: containerization
    if: github.ref == 'refs/heads/main'  # Despliegue solo cuando haya un push o PR a la rama 'main'
    runs-on: ubuntu-22.04
    steps:
      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}  # Llama el webhook de Render para desplegar

  notify-slack-success:
    needs: build
    if: success()
    runs-on: ubuntu-22.04
    steps:
      - name: Notificar a Slack si fue exitosa la ejecuci√≥n de la build
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text":"*üéâ ¬°Build completada exitosamente!* üéâ\n‚Ä¢ Repositorio: `${{ github.repository }}`\n‚Ä¢ Branch: `${{ github.ref_name }}`\n‚Ä¢ Commit: `${{ github.sha }}`\n‚Ä¢ Autor: `${{ github.actor }}`"
          }' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-slack-on-failure:
    needs: build
    if: failure()
    runs-on: ubuntu-22.04
    steps:
      - name: Notificar a Slack si fall√≥ la ejecuci√≥n de la build
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text":"*‚ùå ¬°La build ha fallado!* ‚ö†Ô∏è\n‚Ä¢ Repositorio: `${{ github.repository }}`\n‚Ä¢ Branch: `${{ github.ref_name }}`\n‚Ä¢ Commit: `${{ github.sha }}`\n‚Ä¢ Autor: `${{ github.actor }}`"
          }' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
